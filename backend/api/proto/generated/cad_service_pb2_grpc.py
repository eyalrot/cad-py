# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import cad_service_pb2 as cad__service__pb2
from . import document_pb2 as document__pb2
from . import entity_pb2 as entity__pb2
from . import layer_pb2 as layer__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in cad_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CADServiceStub(object):
    """Main CAD service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDocument = channel.unary_unary(
                '/cad.service.CADService/CreateDocument',
                request_serializer=document__pb2.CreateDocumentRequest.SerializeToString,
                response_deserializer=document__pb2.CreateDocumentResponse.FromString,
                _registered_method=True)
        self.OpenDocument = channel.unary_unary(
                '/cad.service.CADService/OpenDocument',
                request_serializer=document__pb2.OpenDocumentRequest.SerializeToString,
                response_deserializer=document__pb2.OpenDocumentResponse.FromString,
                _registered_method=True)
        self.SaveDocument = channel.unary_unary(
                '/cad.service.CADService/SaveDocument',
                request_serializer=document__pb2.SaveDocumentRequest.SerializeToString,
                response_deserializer=document__pb2.SaveDocumentResponse.FromString,
                _registered_method=True)
        self.LoadDocument = channel.unary_unary(
                '/cad.service.CADService/LoadDocument',
                request_serializer=document__pb2.LoadDocumentRequest.SerializeToString,
                response_deserializer=document__pb2.LoadDocumentResponse.FromString,
                _registered_method=True)
        self.UpdateDocument = channel.unary_unary(
                '/cad.service.CADService/UpdateDocument',
                request_serializer=document__pb2.UpdateDocumentRequest.SerializeToString,
                response_deserializer=document__pb2.UpdateDocumentResponse.FromString,
                _registered_method=True)
        self.DeleteDocument = channel.unary_unary(
                '/cad.service.CADService/DeleteDocument',
                request_serializer=document__pb2.DeleteDocumentRequest.SerializeToString,
                response_deserializer=document__pb2.DeleteDocumentResponse.FromString,
                _registered_method=True)
        self.GetDocumentStatistics = channel.unary_unary(
                '/cad.service.CADService/GetDocumentStatistics',
                request_serializer=document__pb2.GetDocumentStatisticsRequest.SerializeToString,
                response_deserializer=document__pb2.GetDocumentStatisticsResponse.FromString,
                _registered_method=True)
        self.ListDocuments = channel.unary_unary(
                '/cad.service.CADService/ListDocuments',
                request_serializer=document__pb2.ListDocumentsRequest.SerializeToString,
                response_deserializer=document__pb2.ListDocumentsResponse.FromString,
                _registered_method=True)
        self.CreateLayer = channel.unary_unary(
                '/cad.service.CADService/CreateLayer',
                request_serializer=layer__pb2.CreateLayerRequest.SerializeToString,
                response_deserializer=layer__pb2.CreateLayerResponse.FromString,
                _registered_method=True)
        self.UpdateLayer = channel.unary_unary(
                '/cad.service.CADService/UpdateLayer',
                request_serializer=layer__pb2.UpdateLayerRequest.SerializeToString,
                response_deserializer=layer__pb2.UpdateLayerResponse.FromString,
                _registered_method=True)
        self.DeleteLayer = channel.unary_unary(
                '/cad.service.CADService/DeleteLayer',
                request_serializer=layer__pb2.DeleteLayerRequest.SerializeToString,
                response_deserializer=layer__pb2.DeleteLayerResponse.FromString,
                _registered_method=True)
        self.GetLayer = channel.unary_unary(
                '/cad.service.CADService/GetLayer',
                request_serializer=layer__pb2.GetLayerRequest.SerializeToString,
                response_deserializer=layer__pb2.GetLayerResponse.FromString,
                _registered_method=True)
        self.ListLayers = channel.unary_unary(
                '/cad.service.CADService/ListLayers',
                request_serializer=layer__pb2.ListLayersRequest.SerializeToString,
                response_deserializer=layer__pb2.ListLayersResponse.FromString,
                _registered_method=True)
        self.SetCurrentLayer = channel.unary_unary(
                '/cad.service.CADService/SetCurrentLayer',
                request_serializer=layer__pb2.SetCurrentLayerRequest.SerializeToString,
                response_deserializer=layer__pb2.SetCurrentLayerResponse.FromString,
                _registered_method=True)
        self.CreateEntity = channel.unary_unary(
                '/cad.service.CADService/CreateEntity',
                request_serializer=entity__pb2.CreateEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.CreateEntityResponse.FromString,
                _registered_method=True)
        self.UpdateEntity = channel.unary_unary(
                '/cad.service.CADService/UpdateEntity',
                request_serializer=entity__pb2.UpdateEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.UpdateEntityResponse.FromString,
                _registered_method=True)
        self.DeleteEntity = channel.unary_unary(
                '/cad.service.CADService/DeleteEntity',
                request_serializer=entity__pb2.DeleteEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.DeleteEntityResponse.FromString,
                _registered_method=True)
        self.GetEntity = channel.unary_unary(
                '/cad.service.CADService/GetEntity',
                request_serializer=entity__pb2.GetEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.GetEntityResponse.FromString,
                _registered_method=True)
        self.QueryEntities = channel.unary_stream(
                '/cad.service.CADService/QueryEntities',
                request_serializer=entity__pb2.QueryEntitiesRequest.SerializeToString,
                response_deserializer=entity__pb2.Entity.FromString,
                _registered_method=True)
        self.MoveEntities = channel.unary_unary(
                '/cad.service.CADService/MoveEntities',
                request_serializer=entity__pb2.MoveEntitiesRequest.SerializeToString,
                response_deserializer=entity__pb2.MoveEntitiesResponse.FromString,
                _registered_method=True)
        self.BatchCreateEntities = channel.unary_unary(
                '/cad.service.CADService/BatchCreateEntities',
                request_serializer=entity__pb2.BatchCreateEntitiesRequest.SerializeToString,
                response_deserializer=entity__pb2.BatchCreateEntitiesResponse.FromString,
                _registered_method=True)
        self.BatchDeleteEntities = channel.unary_unary(
                '/cad.service.CADService/BatchDeleteEntities',
                request_serializer=entity__pb2.BatchDeleteEntitiesRequest.SerializeToString,
                response_deserializer=entity__pb2.BatchDeleteEntitiesResponse.FromString,
                _registered_method=True)
        self.DrawLine = channel.unary_unary(
                '/cad.service.CADService/DrawLine',
                request_serializer=cad__service__pb2.DrawLineRequest.SerializeToString,
                response_deserializer=entity__pb2.CreateEntityResponse.FromString,
                _registered_method=True)
        self.DrawCircle = channel.unary_unary(
                '/cad.service.CADService/DrawCircle',
                request_serializer=cad__service__pb2.DrawCircleRequest.SerializeToString,
                response_deserializer=entity__pb2.CreateEntityResponse.FromString,
                _registered_method=True)
        self.DrawArc = channel.unary_unary(
                '/cad.service.CADService/DrawArc',
                request_serializer=cad__service__pb2.DrawArcRequest.SerializeToString,
                response_deserializer=entity__pb2.CreateEntityResponse.FromString,
                _registered_method=True)
        self.DrawRectangle = channel.unary_unary(
                '/cad.service.CADService/DrawRectangle',
                request_serializer=cad__service__pb2.DrawRectangleRequest.SerializeToString,
                response_deserializer=entity__pb2.CreateEntityResponse.FromString,
                _registered_method=True)
        self.DrawPolygon = channel.unary_unary(
                '/cad.service.CADService/DrawPolygon',
                request_serializer=cad__service__pb2.DrawPolygonRequest.SerializeToString,
                response_deserializer=entity__pb2.CreateEntityResponse.FromString,
                _registered_method=True)


class CADServiceServicer(object):
    """Main CAD service
    """

    def CreateDocument(self, request, context):
        """Document operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocumentStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLayer(self, request, context):
        """Layer operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCurrentLayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEntity(self, request, context):
        """Entity operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateEntities(self, request, context):
        """Batch operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchDeleteEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DrawLine(self, request, context):
        """Drawing operations (convenience methods)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DrawCircle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DrawArc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DrawRectangle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DrawPolygon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CADServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDocument,
                    request_deserializer=document__pb2.CreateDocumentRequest.FromString,
                    response_serializer=document__pb2.CreateDocumentResponse.SerializeToString,
            ),
            'OpenDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenDocument,
                    request_deserializer=document__pb2.OpenDocumentRequest.FromString,
                    response_serializer=document__pb2.OpenDocumentResponse.SerializeToString,
            ),
            'SaveDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveDocument,
                    request_deserializer=document__pb2.SaveDocumentRequest.FromString,
                    response_serializer=document__pb2.SaveDocumentResponse.SerializeToString,
            ),
            'LoadDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadDocument,
                    request_deserializer=document__pb2.LoadDocumentRequest.FromString,
                    response_serializer=document__pb2.LoadDocumentResponse.SerializeToString,
            ),
            'UpdateDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDocument,
                    request_deserializer=document__pb2.UpdateDocumentRequest.FromString,
                    response_serializer=document__pb2.UpdateDocumentResponse.SerializeToString,
            ),
            'DeleteDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDocument,
                    request_deserializer=document__pb2.DeleteDocumentRequest.FromString,
                    response_serializer=document__pb2.DeleteDocumentResponse.SerializeToString,
            ),
            'GetDocumentStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocumentStatistics,
                    request_deserializer=document__pb2.GetDocumentStatisticsRequest.FromString,
                    response_serializer=document__pb2.GetDocumentStatisticsResponse.SerializeToString,
            ),
            'ListDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDocuments,
                    request_deserializer=document__pb2.ListDocumentsRequest.FromString,
                    response_serializer=document__pb2.ListDocumentsResponse.SerializeToString,
            ),
            'CreateLayer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLayer,
                    request_deserializer=layer__pb2.CreateLayerRequest.FromString,
                    response_serializer=layer__pb2.CreateLayerResponse.SerializeToString,
            ),
            'UpdateLayer': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLayer,
                    request_deserializer=layer__pb2.UpdateLayerRequest.FromString,
                    response_serializer=layer__pb2.UpdateLayerResponse.SerializeToString,
            ),
            'DeleteLayer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLayer,
                    request_deserializer=layer__pb2.DeleteLayerRequest.FromString,
                    response_serializer=layer__pb2.DeleteLayerResponse.SerializeToString,
            ),
            'GetLayer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLayer,
                    request_deserializer=layer__pb2.GetLayerRequest.FromString,
                    response_serializer=layer__pb2.GetLayerResponse.SerializeToString,
            ),
            'ListLayers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLayers,
                    request_deserializer=layer__pb2.ListLayersRequest.FromString,
                    response_serializer=layer__pb2.ListLayersResponse.SerializeToString,
            ),
            'SetCurrentLayer': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCurrentLayer,
                    request_deserializer=layer__pb2.SetCurrentLayerRequest.FromString,
                    response_serializer=layer__pb2.SetCurrentLayerResponse.SerializeToString,
            ),
            'CreateEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEntity,
                    request_deserializer=entity__pb2.CreateEntityRequest.FromString,
                    response_serializer=entity__pb2.CreateEntityResponse.SerializeToString,
            ),
            'UpdateEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEntity,
                    request_deserializer=entity__pb2.UpdateEntityRequest.FromString,
                    response_serializer=entity__pb2.UpdateEntityResponse.SerializeToString,
            ),
            'DeleteEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEntity,
                    request_deserializer=entity__pb2.DeleteEntityRequest.FromString,
                    response_serializer=entity__pb2.DeleteEntityResponse.SerializeToString,
            ),
            'GetEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntity,
                    request_deserializer=entity__pb2.GetEntityRequest.FromString,
                    response_serializer=entity__pb2.GetEntityResponse.SerializeToString,
            ),
            'QueryEntities': grpc.unary_stream_rpc_method_handler(
                    servicer.QueryEntities,
                    request_deserializer=entity__pb2.QueryEntitiesRequest.FromString,
                    response_serializer=entity__pb2.Entity.SerializeToString,
            ),
            'MoveEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveEntities,
                    request_deserializer=entity__pb2.MoveEntitiesRequest.FromString,
                    response_serializer=entity__pb2.MoveEntitiesResponse.SerializeToString,
            ),
            'BatchCreateEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateEntities,
                    request_deserializer=entity__pb2.BatchCreateEntitiesRequest.FromString,
                    response_serializer=entity__pb2.BatchCreateEntitiesResponse.SerializeToString,
            ),
            'BatchDeleteEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchDeleteEntities,
                    request_deserializer=entity__pb2.BatchDeleteEntitiesRequest.FromString,
                    response_serializer=entity__pb2.BatchDeleteEntitiesResponse.SerializeToString,
            ),
            'DrawLine': grpc.unary_unary_rpc_method_handler(
                    servicer.DrawLine,
                    request_deserializer=cad__service__pb2.DrawLineRequest.FromString,
                    response_serializer=entity__pb2.CreateEntityResponse.SerializeToString,
            ),
            'DrawCircle': grpc.unary_unary_rpc_method_handler(
                    servicer.DrawCircle,
                    request_deserializer=cad__service__pb2.DrawCircleRequest.FromString,
                    response_serializer=entity__pb2.CreateEntityResponse.SerializeToString,
            ),
            'DrawArc': grpc.unary_unary_rpc_method_handler(
                    servicer.DrawArc,
                    request_deserializer=cad__service__pb2.DrawArcRequest.FromString,
                    response_serializer=entity__pb2.CreateEntityResponse.SerializeToString,
            ),
            'DrawRectangle': grpc.unary_unary_rpc_method_handler(
                    servicer.DrawRectangle,
                    request_deserializer=cad__service__pb2.DrawRectangleRequest.FromString,
                    response_serializer=entity__pb2.CreateEntityResponse.SerializeToString,
            ),
            'DrawPolygon': grpc.unary_unary_rpc_method_handler(
                    servicer.DrawPolygon,
                    request_deserializer=cad__service__pb2.DrawPolygonRequest.FromString,
                    response_serializer=entity__pb2.CreateEntityResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cad.service.CADService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cad.service.CADService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CADService(object):
    """Main CAD service
    """

    @staticmethod
    def CreateDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/CreateDocument',
            document__pb2.CreateDocumentRequest.SerializeToString,
            document__pb2.CreateDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OpenDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/OpenDocument',
            document__pb2.OpenDocumentRequest.SerializeToString,
            document__pb2.OpenDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SaveDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/SaveDocument',
            document__pb2.SaveDocumentRequest.SerializeToString,
            document__pb2.SaveDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/LoadDocument',
            document__pb2.LoadDocumentRequest.SerializeToString,
            document__pb2.LoadDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/UpdateDocument',
            document__pb2.UpdateDocumentRequest.SerializeToString,
            document__pb2.UpdateDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/DeleteDocument',
            document__pb2.DeleteDocumentRequest.SerializeToString,
            document__pb2.DeleteDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDocumentStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/GetDocumentStatistics',
            document__pb2.GetDocumentStatisticsRequest.SerializeToString,
            document__pb2.GetDocumentStatisticsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/ListDocuments',
            document__pb2.ListDocumentsRequest.SerializeToString,
            document__pb2.ListDocumentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateLayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/CreateLayer',
            layer__pb2.CreateLayerRequest.SerializeToString,
            layer__pb2.CreateLayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateLayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/UpdateLayer',
            layer__pb2.UpdateLayerRequest.SerializeToString,
            layer__pb2.UpdateLayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteLayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/DeleteLayer',
            layer__pb2.DeleteLayerRequest.SerializeToString,
            layer__pb2.DeleteLayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/GetLayer',
            layer__pb2.GetLayerRequest.SerializeToString,
            layer__pb2.GetLayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListLayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/ListLayers',
            layer__pb2.ListLayersRequest.SerializeToString,
            layer__pb2.ListLayersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCurrentLayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/SetCurrentLayer',
            layer__pb2.SetCurrentLayerRequest.SerializeToString,
            layer__pb2.SetCurrentLayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/CreateEntity',
            entity__pb2.CreateEntityRequest.SerializeToString,
            entity__pb2.CreateEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/UpdateEntity',
            entity__pb2.UpdateEntityRequest.SerializeToString,
            entity__pb2.UpdateEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/DeleteEntity',
            entity__pb2.DeleteEntityRequest.SerializeToString,
            entity__pb2.DeleteEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/GetEntity',
            entity__pb2.GetEntityRequest.SerializeToString,
            entity__pb2.GetEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cad.service.CADService/QueryEntities',
            entity__pb2.QueryEntitiesRequest.SerializeToString,
            entity__pb2.Entity.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MoveEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/MoveEntities',
            entity__pb2.MoveEntitiesRequest.SerializeToString,
            entity__pb2.MoveEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchCreateEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/BatchCreateEntities',
            entity__pb2.BatchCreateEntitiesRequest.SerializeToString,
            entity__pb2.BatchCreateEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchDeleteEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/BatchDeleteEntities',
            entity__pb2.BatchDeleteEntitiesRequest.SerializeToString,
            entity__pb2.BatchDeleteEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DrawLine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/DrawLine',
            cad__service__pb2.DrawLineRequest.SerializeToString,
            entity__pb2.CreateEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DrawCircle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/DrawCircle',
            cad__service__pb2.DrawCircleRequest.SerializeToString,
            entity__pb2.CreateEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DrawArc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/DrawArc',
            cad__service__pb2.DrawArcRequest.SerializeToString,
            entity__pb2.CreateEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DrawRectangle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/DrawRectangle',
            cad__service__pb2.DrawRectangleRequest.SerializeToString,
            entity__pb2.CreateEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DrawPolygon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cad.service.CADService/DrawPolygon',
            cad__service__pb2.DrawPolygonRequest.SerializeToString,
            entity__pb2.CreateEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
