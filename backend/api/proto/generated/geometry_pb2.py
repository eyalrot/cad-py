# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: geometry.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'geometry.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0egeometry.proto\x12\x0c\x63\x61\x64.geometry\"\x1d\n\x05Point\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\"\x1e\n\x06Vector\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\"Q\n\x0b\x42oundingBox\x12 \n\x03min\x18\x01 \x01(\x0b\x32\x13.cad.geometry.Point\x12 \n\x03max\x18\x02 \x01(\x0b\x32\x13.cad.geometry.Point\"@\n\x05\x43olor\x12\x0b\n\x03red\x18\x01 \x01(\x05\x12\r\n\x05green\x18\x02 \x01(\x05\x12\x0c\n\x04\x62lue\x18\x03 \x01(\x05\x12\r\n\x05\x61lpha\x18\x04 \x01(\x05\"T\n\x0cLineGeometry\x12\"\n\x05start\x18\x01 \x01(\x0b\x32\x13.cad.geometry.Point\x12 \n\x03\x65nd\x18\x02 \x01(\x0b\x32\x13.cad.geometry.Point\"E\n\x0e\x43ircleGeometry\x12#\n\x06\x63\x65nter\x18\x01 \x01(\x0b\x32\x13.cad.geometry.Point\x12\x0e\n\x06radius\x18\x02 \x01(\x01\"j\n\x0b\x41rcGeometry\x12#\n\x06\x63\x65nter\x18\x01 \x01(\x0b\x32\x13.cad.geometry.Point\x12\x0e\n\x06radius\x18\x02 \x01(\x01\x12\x13\n\x0bstart_angle\x18\x03 \x01(\x01\x12\x11\n\tend_angle\x18\x04 \x01(\x01\"_\n\x11RectangleGeometry\x12$\n\x07\x63orner1\x18\x01 \x01(\x0b\x32\x13.cad.geometry.Point\x12$\n\x07\x63orner2\x18\x02 \x01(\x0b\x32\x13.cad.geometry.Point\"H\n\x0fPolygonGeometry\x12%\n\x08vertices\x18\x01 \x03(\x0b\x32\x13.cad.geometry.Point\x12\x0e\n\x06\x63losed\x18\x02 \x01(\x08\"\x8a\x02\n\x0e\x45ntityGeometry\x12*\n\x04line\x18\x01 \x01(\x0b\x32\x1a.cad.geometry.LineGeometryH\x00\x12.\n\x06\x63ircle\x18\x02 \x01(\x0b\x32\x1c.cad.geometry.CircleGeometryH\x00\x12(\n\x03\x61rc\x18\x03 \x01(\x0b\x32\x19.cad.geometry.ArcGeometryH\x00\x12\x34\n\trectangle\x18\x04 \x01(\x0b\x32\x1f.cad.geometry.RectangleGeometryH\x00\x12\x30\n\x07polygon\x18\x05 \x01(\x0b\x32\x1d.cad.geometry.PolygonGeometryH\x00\x42\n\n\x08geometry*w\n\x08LineType\x12\x0e\n\nCONTINUOUS\x10\x00\x12\n\n\x06\x44\x41SHED\x10\x01\x12\n\n\x06\x44OTTED\x10\x02\x12\x0c\n\x08\x44\x41SH_DOT\x10\x03\x12\x10\n\x0c\x44\x41SH_DOT_DOT\x10\x04\x12\n\n\x06\x43\x45NTER\x10\x05\x12\x0b\n\x07PHANTOM\x10\x06\x12\n\n\x06HIDDEN\x10\x07\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'geometry_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_LINETYPE']._serialized_start=949
  _globals['_LINETYPE']._serialized_end=1068
  _globals['_POINT']._serialized_start=32
  _globals['_POINT']._serialized_end=61
  _globals['_VECTOR']._serialized_start=63
  _globals['_VECTOR']._serialized_end=93
  _globals['_BOUNDINGBOX']._serialized_start=95
  _globals['_BOUNDINGBOX']._serialized_end=176
  _globals['_COLOR']._serialized_start=178
  _globals['_COLOR']._serialized_end=242
  _globals['_LINEGEOMETRY']._serialized_start=244
  _globals['_LINEGEOMETRY']._serialized_end=328
  _globals['_CIRCLEGEOMETRY']._serialized_start=330
  _globals['_CIRCLEGEOMETRY']._serialized_end=399
  _globals['_ARCGEOMETRY']._serialized_start=401
  _globals['_ARCGEOMETRY']._serialized_end=507
  _globals['_RECTANGLEGEOMETRY']._serialized_start=509
  _globals['_RECTANGLEGEOMETRY']._serialized_end=604
  _globals['_POLYGONGEOMETRY']._serialized_start=606
  _globals['_POLYGONGEOMETRY']._serialized_end=678
  _globals['_ENTITYGEOMETRY']._serialized_start=681
  _globals['_ENTITYGEOMETRY']._serialized_end=947
# @@protoc_insertion_point(module_scope)
